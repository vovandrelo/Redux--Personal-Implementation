import { createStore } from "./Store/Store";
import { notesReducer } from "./modules/notes/reducer";

// Глобальный reducer - это функция, которая позволяет изменять ГС взависимости от указанного действия.

// Начальное глобальное состояние имеет вид:
const rootInitialState = {
  // Свойство collections будет содержать модули, содержащие в себе данные из БД.
  collections: {},
};

// При использовании reducer-а в качестве аргументов передаётся текущее ГС и действие, которое указывает
// каким образом ГС должно быть изменено. При первом вызове reducer-а он использует в качестве ГС начальное,
// а действие равняется undefine. 
const rootReducer = (state = rootInitialState, action) => {
  const newState = {
    // После поступления в глобальный Reducer ГС оно разбивается на модули - некие логические подсостояния.
    // Каждый модуль имеет собственный reducer, в котором используется и изменятся та часть состояния, за которую
    // он отвечает.

    // При этом переданное в глоабльный reducer действие может обрабатываться только одним внутренним reducer-ом,
    // это означает, что только один модуль ГС будет изменён, остальные внутренние reducer-ы вернут неизменённый
    // модуль.
  
    // Модуль №1: Заметки
    notes: notesReducer(state.notes, action),
    
    // ... Аналогично описываются и другие модули ...
  }
  console.log("The state has been changed. New state:", newState);

  // Результатом работы глобального reducer-а является новое ГС:
  return newState;
};

// Для создания ГС испольузется функция createStore, единственным аргументом которой является глобальный reducer:
export const store = createStore(rootReducer);
